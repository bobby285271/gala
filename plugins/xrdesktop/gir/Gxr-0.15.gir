<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="Gdk" version="3.0"/>
  <include name="GdkPixbuf" version="2.0"/>
  <include name="cairo" version="1.0"/>
  <package name="gxr-0.15"/>
  <c:include name="gxr/gxr.h"/>
  <namespace name="Gxr"
             version="0.15"
             shared-library="libgxr-0.15.so.0"
             c:identifier-prefixes="Gxr"
             c:symbol-prefixes="gxr">
    <class name="Action"
           c:symbol-prefix="action"
           c:type="GxrAction"
           parent="GObject.Object"
           glib:type-name="GxrAction"
           glib:get-type="gxr_action_get_type"
           glib:type-struct="ActionClass">
      <source-position filename="../src/gxr-action.h" line="52"/>
      <constructor name="new_from_type_url"
                   c:identifier="gxr_action_new_from_type_url">
        <source-position filename="../src/gxr-action.h" line="55"/>
        <return-value transfer-ownership="full">
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </constructor>
      <function name="sets_attach_bindings"
                c:identifier="gxr_action_sets_attach_bindings">
        <source-position filename="../src/gxr-action-set.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sets" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet**"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </function>
      <function name="sets_poll" c:identifier="gxr_action_sets_poll">
        <source-position filename="../src/gxr-action-set.h" line="48"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <parameter name="sets" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet**"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </function>
      <virtual-method name="poll" invoker="poll">
        <source-position filename="../src/gxr-action.h" line="35"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_digital_from_float_haptic"
                      invoker="set_digital_from_float_haptic">
        <source-position filename="../src/gxr-action.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="haptic_action" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_digital_from_float_threshold"
                      invoker="set_digital_from_float_threshold">
        <source-position filename="../src/gxr-action.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="threshold" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="trigger_haptic" invoker="trigger_haptic">
        <source-position filename="../src/gxr-action.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="action" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="start_seconds_from_now" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="duration_seconds" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="frequency" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="amplitude" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="controller_handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="emit_analog" c:identifier="gxr_action_emit_analog">
        <source-position filename="../src/gxr-action.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="AnalogEvent" c:type="GxrAnalogEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_digital" c:identifier="gxr_action_emit_digital">
        <source-position filename="../src/gxr-action.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="DigitalEvent" c:type="GxrDigitalEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="emit_pose" c:identifier="gxr_action_emit_pose">
        <source-position filename="../src/gxr-action.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="event" transfer-ownership="none">
            <type name="PoseEvent" c:type="GxrPoseEvent*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_action_set"
              c:identifier="gxr_action_get_action_set"
              introspectable="0">
        <source-position filename="../src/gxr-action.h" line="75"/>
        <return-value>
          <type name="ActionSet" c:type="GxrActionSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_action_type" c:identifier="gxr_action_get_action_type">
        <source-position filename="../src/gxr-action.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="ActionType" c:type="GxrActionType"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_url" c:identifier="gxr_action_get_url">
        <source-position filename="../src/gxr-action.h" line="78"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="poll" c:identifier="gxr_action_poll">
        <source-position filename="../src/gxr-action.h" line="61"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_action_set" c:identifier="gxr_action_set_action_set">
        <source-position filename="../src/gxr-action.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_action_type" c:identifier="gxr_action_set_action_type">
        <source-position filename="../src/gxr-action.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_digital_from_float_haptic"
              c:identifier="gxr_action_set_digital_from_float_haptic">
        <source-position filename="../src/gxr-action.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="haptic_action" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_digital_from_float_threshold"
              c:identifier="gxr_action_set_digital_from_float_threshold">
        <source-position filename="../src/gxr-action.h" line="102"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="threshold" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_url" c:identifier="gxr_action_set_url">
        <source-position filename="../src/gxr-action.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="trigger_haptic" c:identifier="gxr_action_trigger_haptic">
        <source-position filename="../src/gxr-action.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Action" c:type="GxrAction*"/>
          </instance-parameter>
          <parameter name="start_seconds_from_now" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="duration_seconds" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="frequency" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="amplitude" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="controller_handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="analog-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="digital-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="pose-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ActionClass"
            c:type="GxrActionClass"
            glib:is-gtype-struct-for="Action">
      <source-position filename="../src/gxr-action.h" line="52"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="poll">
        <callback name="poll">
          <source-position filename="../src/gxr-action.h" line="35"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="GxrAction*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="trigger_haptic">
        <callback name="trigger_haptic">
          <source-position filename="../src/gxr-action.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="action" transfer-ownership="none">
              <type name="Action" c:type="GxrAction*"/>
            </parameter>
            <parameter name="start_seconds_from_now" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="duration_seconds" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="frequency" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="amplitude" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="controller_handle" transfer-ownership="none">
              <type name="guint64" c:type="guint64"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_digital_from_float_threshold">
        <callback name="set_digital_from_float_threshold">
          <source-position filename="../src/gxr-action.h" line="46"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Action" c:type="GxrAction*"/>
            </parameter>
            <parameter name="threshold" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_digital_from_float_haptic">
        <callback name="set_digital_from_float_haptic">
          <source-position filename="../src/gxr-action.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Action" c:type="GxrAction*"/>
            </parameter>
            <parameter name="haptic_action" transfer-ownership="none">
              <type name="Action" c:type="GxrAction*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="ActionManifestEntry" c:type="GxrActionManifestEntry">
      <source-position filename="../src/gxr-manifest.h" line="83"/>
      <field name="name" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="type" writable="1">
        <type name="BindingType" c:type="GxrBindingType"/>
      </field>
    </record>
    <class name="ActionSet"
           c:symbol-prefix="action_set"
           c:type="GxrActionSet"
           parent="GObject.Object"
           glib:type-name="GxrActionSet"
           glib:get-type="gxr_action_set_get_type"
           glib:type-struct="ActionSetClass">
      <source-position filename="../src/gxr-action-set.h" line="42"/>
      <constructor name="new_from_url"
                   c:identifier="gxr_action_set_new_from_url">
        <source-position filename="../src/gxr-action-set.h" line="45"/>
        <return-value transfer-ownership="full">
          <type name="ActionSet" c:type="GxrActionSet*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="attach_bindings">
        <source-position filename="../src/gxr-action-set.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sets" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet**"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="create_action" introspectable="0">
        <source-position filename="../src/gxr-action-set.h" line="34"/>
        <return-value>
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="update">
        <source-position filename="../src/gxr-action-set.h" line="31"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="sets" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet**"/>
          </instance-parameter>
          <parameter name="count" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="connect"
              c:identifier="gxr_action_set_connect"
              introspectable="0">
        <source-position filename="../src/gxr-action-set.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none" closure="4">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_digital_from_float"
              c:identifier="gxr_action_set_connect_digital_from_float"
              introspectable="0">
        <source-position filename="../src/gxr-action-set.h" line="59"/>
        <return-value>
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="threshold" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="haptic_url" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="callback" transfer-ownership="none" closure="5">
            <type name="GObject.Callback" c:type="GCallback"/>
          </parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_actions"
              c:identifier="gxr_action_set_get_actions"
              introspectable="0">
        <source-position filename="../src/gxr-action-set.h" line="68"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="ActionSetClass"
            c:type="GxrActionSetClass"
            glib:is-gtype-struct-for="ActionSet">
      <source-position filename="../src/gxr-action-set.h" line="42"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="update">
        <callback name="update">
          <source-position filename="../src/gxr-action-set.h" line="31"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sets" transfer-ownership="none">
              <type name="ActionSet" c:type="GxrActionSet**"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="create_action" introspectable="0">
        <callback name="create_action" introspectable="0">
          <source-position filename="../src/gxr-action-set.h" line="34"/>
          <return-value>
            <type name="Action" c:type="GxrAction*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="ActionSet" c:type="GxrActionSet*"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="ActionType" c:type="GxrActionType"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="attach_bindings">
        <callback name="attach_bindings">
          <source-position filename="../src/gxr-action-set.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="sets" transfer-ownership="none">
              <type name="ActionSet" c:type="GxrActionSet**"/>
            </parameter>
            <parameter name="context" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="count" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="ActionType" c:type="GxrActionType">
      <doc xml:space="preserve"
           filename="../src/gxr-enums.h"
           line="77">The type of the GxrAction.</doc>
      <source-position filename="../src/gxr-enums.h" line="96"/>
      <member name="digital" value="0" c:identifier="GXR_ACTION_DIGITAL">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="79">A digital action.</doc>
      </member>
      <member name="digital_from_float"
              value="1"
              c:identifier="GXR_ACTION_DIGITAL_FROM_FLOAT">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="80">A digital action constructed from float thresholds.</doc>
      </member>
      <member name="vec2f" value="2" c:identifier="GXR_ACTION_VEC2F">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="81">An analog action with floats x,y.</doc>
      </member>
      <member name="float" value="3" c:identifier="GXR_ACTION_FLOAT">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="82">An analog action.</doc>
      </member>
      <member name="pose" value="4" c:identifier="GXR_ACTION_POSE">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="83">A pose action.</doc>
      </member>
      <member name="haptic" value="5" c:identifier="GXR_ACTION_HAPTIC">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="84">A haptic action.</doc>
      </member>
    </enumeration>
    <record name="AnalogEvent" c:type="GxrAnalogEvent">
      <doc xml:space="preserve"
           filename="../src/gxr-types.h"
           line="43">Analog event.</doc>
      <source-position filename="../src/gxr-types.h" line="59"/>
      <field name="active" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="45">Whether or not this action is currently available to be bound in the active action set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="state" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="46">A #graphene_vec3_t analog state.</doc>
        <type c:type="graphene_vec3_t"/>
      </field>
      <field name="delta" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="47">State delta since last event.</doc>
        <type c:type="graphene_vec3_t"/>
      </field>
      <field name="controller" writable="1">
        <type name="Controller" c:type="GxrController*"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="49">The time of the event.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <enumeration name="Api" c:type="GxrApi">
      <doc xml:space="preserve"
           filename="../src/gxr-enums.h"
           line="62">Type of API backend to use.</doc>
      <source-position filename="../src/gxr-enums.h" line="75"/>
      <member name="openvr" value="0" c:identifier="GXR_API_OPENVR">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="64">Use OpenVR.</doc>
      </member>
      <member name="openxr" value="1" c:identifier="GXR_API_OPENXR">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="65">Use OpenXR.</doc>
      </member>
      <member name="none" value="2" c:identifier="GXR_API_NONE">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="66">No API specified.</doc>
      </member>
    </enumeration>
    <enumeration name="AppType" c:type="GxrAppType">
      <doc xml:space="preserve"
           filename="../src/gxr-enums.h"
           line="19">Type of Gxr application.</doc>
      <source-position filename="../src/gxr-enums.h" line="32"/>
      <member name="scene" value="0" c:identifier="GXR_APP_SCENE">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="21">Scene application. Renders stereo viewports for the whole scene.</doc>
      </member>
      <member name="overlay" value="1" c:identifier="GXR_APP_OVERLAY">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="22">Overlay application. Renders mono buffers to overlays.</doc>
      </member>
      <member name="headless" value="2" c:identifier="GXR_APP_HEADLESS">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="23">Background application. Does not render anything.</doc>
      </member>
    </enumeration>
    <class name="Backend"
           c:symbol-prefix="backend"
           c:type="GxrBackend"
           parent="GObject.Object"
           glib:type-name="GxrBackend"
           glib:get-type="gxr_backend_get_type"
           glib:type-struct="BackendClass">
      <source-position filename="../src/gxr-backend.h" line="20"/>
      <function name="shutdown" c:identifier="gxr_backend_shutdown">
        <source-position filename="../src/gxr-backend.h" line="23"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </function>
    </class>
    <record name="BackendClass"
            c:type="GxrBackendClass"
            glib:is-gtype-struct-for="Backend">
      <source-position filename="../src/gxr-backend.h" line="20"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="Binding" c:type="GxrBinding">
      <source-position filename="../src/gxr-manifest.h" line="96"/>
      <field name="action" writable="1">
        <type name="ActionManifestEntry" c:type="GxrActionManifestEntry*"/>
      </field>
      <field name="input_paths" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
    </record>
    <enumeration name="BindingComponent" c:type="GxrBindingComponent">
      <doc xml:space="preserve"
           filename="../src/gxr-manifest.h"
           line="56">The component of the GxrBindingPath.</doc>
      <source-position filename="../src/gxr-manifest.h" line="77"/>
      <member name="none" value="0" c:identifier="GXR_BINDING_COMPONENT_NONE">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="58">None.</doc>
      </member>
      <member name="unknown"
              value="1"
              c:identifier="GXR_BINDING_COMPONENT_UNKNOWN">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="59">Unknown.</doc>
      </member>
      <member name="click"
              value="2"
              c:identifier="GXR_BINDING_COMPONENT_CLICK">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="60">Click.</doc>
      </member>
      <member name="pull" value="3" c:identifier="GXR_BINDING_COMPONENT_PULL">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="61">Pull.</doc>
      </member>
      <member name="position"
              value="4"
              c:identifier="GXR_BINDING_COMPONENT_POSITION">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="62">Position.</doc>
      </member>
      <member name="touch"
              value="5"
              c:identifier="GXR_BINDING_COMPONENT_TOUCH">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="63">Touch.</doc>
      </member>
      <member name="force"
              value="6"
              c:identifier="GXR_BINDING_COMPONENT_FORCE">
      </member>
    </enumeration>
    <record name="BindingManifest" c:type="GxrBindingManifest">
      <source-position filename="../src/gxr-manifest.h" line="107"/>
      <field name="filename" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="gxr_bindings" writable="1">
        <type name="GLib.SList" c:type="GSList*">
          <type name="gpointer" c:type="gpointer"/>
        </type>
      </field>
      <field name="interaction_profile" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
    </record>
    <enumeration name="BindingMode" c:type="GxrBindingMode">
      <doc xml:space="preserve"
           filename="../src/gxr-manifest.h"
           line="36">The mode of the GxrBinding.</doc>
      <source-position filename="../src/gxr-manifest.h" line="54"/>
      <member name="none" value="0" c:identifier="GXR_BINDING_MODE_NONE">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="38">None.</doc>
      </member>
      <member name="unknown" value="1" c:identifier="GXR_BINDING_MODE_UNKNOWN">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="39">Unknown.</doc>
      </member>
      <member name="button" value="2" c:identifier="GXR_BINDING_MODE_BUTTON">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="40">Button.</doc>
      </member>
      <member name="trackpad"
              value="3"
              c:identifier="GXR_BINDING_MODE_TRACKPAD">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="41">Trackpad.</doc>
      </member>
      <member name="analog_stick"
              value="4"
              c:identifier="GXR_BINDING_MODE_ANALOG_STICK">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="42">Thumbstick.</doc>
      </member>
    </enumeration>
    <record name="BindingPath" c:type="GxrBindingPath">
      <source-position filename="../src/gxr-manifest.h" line="90"/>
      <field name="component" writable="1">
        <type name="BindingComponent" c:type="GxrBindingComponent"/>
      </field>
      <field name="path" writable="1">
        <type name="utf8" c:type="gchar*"/>
      </field>
      <field name="mode" writable="1">
        <type name="BindingMode" c:type="GxrBindingMode"/>
      </field>
    </record>
    <enumeration name="BindingType" c:type="GxrBindingType">
      <doc xml:space="preserve"
           filename="../src/gxr-manifest.h"
           line="14">The type of GxrBinding.</doc>
      <source-position filename="../src/gxr-manifest.h" line="34"/>
      <member name="unknown" value="0" c:identifier="GXR_BINDING_TYPE_UNKNOWN">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="16">An unknown binding type.</doc>
      </member>
      <member name="pose" value="1" c:identifier="GXR_BINDING_TYPE_POSE">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="17">A pose binding type.</doc>
      </member>
      <member name="boolean" value="2" c:identifier="GXR_BINDING_TYPE_BOOLEAN">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="18">A pose boolean type.</doc>
      </member>
      <member name="float" value="3" c:identifier="GXR_BINDING_TYPE_FLOAT">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="19">A pose float type.</doc>
      </member>
      <member name="vec2" value="4" c:identifier="GXR_BINDING_TYPE_VEC2">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="20">A pose vec2 type.</doc>
      </member>
      <member name="haptic" value="5" c:identifier="GXR_BINDING_TYPE_HAPTIC">
        <doc xml:space="preserve"
             filename="../src/gxr-manifest.h"
             line="21">A pose haptic type.</doc>
      </member>
    </enumeration>
    <class name="Context"
           c:symbol-prefix="context"
           c:type="GxrContext"
           parent="GObject.Object"
           glib:type-name="GxrContext"
           glib:get-type="gxr_context_get_type"
           glib:type-struct="ContextClass">
      <source-position filename="../src/gxr-context.h" line="165"/>
      <constructor name="new" c:identifier="gxr_context_new">
        <source-position filename="../src/gxr-context.h" line="167"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="AppType" c:type="GxrAppType"/>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_api" c:identifier="gxr_context_new_from_api">
        <source-position filename="../src/gxr-context.h" line="172"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="AppType" c:type="GxrAppType"/>
          </parameter>
          <parameter name="backend" transfer-ownership="none">
            <type name="Api" c:type="GxrApi"/>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_from_vulkan_extensions"
                   c:identifier="gxr_context_new_from_vulkan_extensions"
                   introspectable="0">
        <source-position filename="../src/gxr-context.h" line="177"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="AppType" c:type="GxrAppType"/>
          </parameter>
          <parameter name="instance_ext_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="device_ext_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_full"
                   c:identifier="gxr_context_new_full"
                   introspectable="0">
        <source-position filename="../src/gxr-context.h" line="190"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="type" transfer-ownership="none">
            <type name="AppType" c:type="GxrAppType"/>
          </parameter>
          <parameter name="api" transfer-ownership="none">
            <type name="Api" c:type="GxrApi"/>
          </parameter>
          <parameter name="instance_ext_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="device_ext_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_headless" c:identifier="gxr_context_new_headless">
        <source-position filename="../src/gxr-context.h" line="183"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_headless_from_api"
                   c:identifier="gxr_context_new_headless_from_api">
        <source-position filename="../src/gxr-context.h" line="186"/>
        <return-value transfer-ownership="full">
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <parameter name="api" transfer-ownership="none">
            <type name="Api" c:type="GxrApi"/>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="acknowledge_quit" invoker="acknowledge_quit">
        <source-position filename="../src/gxr-context.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="begin_frame">
        <source-position filename="../src/gxr-context.h" line="96"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="poses" transfer-ownership="none">
            <type name="Pose" c:type="GxrPose*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="device_is_controller"
                      invoker="device_is_controller">
        <source-position filename="../src/gxr-context.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="end_frame" invoker="end_frame">
        <source-position filename="../src/gxr-context.h" line="100"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_acquired_framebuffer"
                      invoker="get_acquired_framebuffer"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="164"/>
        <return-value>
          <type c:type="GulkanFrameBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="view" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_device_extensions"
                      invoker="get_device_extensions"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="156"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type c:type="GulkanClient*"/>
          </parameter>
          <parameter name="out_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_device_model_name"
                      invoker="get_device_model_name">
        <source-position filename="../src/gxr-context.h" line="112"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_frustum_angles" invoker="get_frustum_angles">
        <source-position filename="../src/gxr-context.h" line="39"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="left" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="top" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="bottom" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_head_pose"
                      invoker="get_head_pose"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_instance_extensions"
                      invoker="get_instance_extensions"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="153"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="out_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_model_list"
                      invoker="get_model_list"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="129"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_model_normal_offset"
                      invoker="get_model_normal_offset">
        <source-position filename="../src/gxr-context.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_model_uv_offset" invoker="get_model_uv_offset">
        <source-position filename="../src/gxr-context.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_model_vertex_stride"
                      invoker="get_model_vertex_stride">
        <source-position filename="../src/gxr-context.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_projection"
                      invoker="get_projection"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="near" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="far" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_render_dimensions"
                      invoker="get_render_dimensions"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="extent" transfer-ownership="none">
            <type c:type="VkExtent2D*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_view" invoker="get_view" introspectable="0">
        <source-position filename="../src/gxr-context.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_view_count" invoker="get_view_count">
        <source-position filename="../src/gxr-context.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_framebuffers"
                      invoker="init_framebuffers"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="extent" transfer-ownership="none">
            <type c:type="VkExtent2D"/>
          </parameter>
          <parameter name="sample_count" transfer-ownership="none">
            <type c:type="VkSampleCountFlagBits"/>
          </parameter>
          <parameter name="render_pass" transfer-ownership="none">
            <type c:type="GulkanRenderPass**"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_runtime">
        <source-position filename="../src/gxr-context.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="AppType" c:type="GxrAppType"/>
          </parameter>
          <parameter name="app_name" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
          <parameter name="app_version" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="init_session">
        <source-position filename="../src/gxr-context.h" line="63"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_another_scene_running"
                      invoker="is_another_scene_running">
        <source-position filename="../src/gxr-context.h" line="122"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_input_available" invoker="is_input_available">
        <source-position filename="../src/gxr-context.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_tracked_device_connected"
                      invoker="is_tracked_device_connected">
        <source-position filename="../src/gxr-context.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load_action_manifest"
                      invoker="load_action_manifest">
        <source-position filename="../src/gxr-context.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="cache_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="resource_path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="manifest_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="load_model"
                      invoker="load_model"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="vbo" transfer-ownership="none">
            <type c:type="GulkanVertexBuffer*"/>
          </parameter>
          <parameter name="texture" transfer-ownership="none">
            <type c:type="GulkanTexture**"/>
          </parameter>
          <parameter name="sampler" transfer-ownership="none">
            <type c:type="VkSampler*"/>
          </parameter>
          <parameter name="model_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_action_from_type_url" introspectable="0">
        <source-position filename="../src/gxr-context.h" line="141"/>
        <return-value>
          <type name="Action" c:type="GxrAction*"/>
        </return-value>
        <parameters>
          <instance-parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
          <parameter name="type" transfer-ownership="none">
            <type name="ActionType" c:type="GxrActionType"/>
          </parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="char*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_action_set_from_url" introspectable="0">
        <source-position filename="../src/gxr-context.h" line="132"/>
        <return-value>
          <type name="ActionSet" c:type="GxrActionSet*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="new_overlay" introspectable="0">
        <source-position filename="../src/gxr-context.h" line="147"/>
        <return-value>
          <type name="Overlay" c:type="GxrOverlay*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_event" invoker="poll_event">
        <source-position filename="../src/gxr-context.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="request_quit" invoker="request_quit">
        <source-position filename="../src/gxr-context.h" line="150"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_keyboard_transform"
                      invoker="set_keyboard_transform"
                      introspectable="0">
        <source-position filename="../src/gxr-context.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="transform" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show_keyboard" invoker="show_keyboard">
        <source-position filename="../src/gxr-context.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="submit_framebuffers" invoker="submit_framebuffers">
        <source-position filename="../src/gxr-context.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="acknowledge_quit"
              c:identifier="gxr_context_acknowledge_quit">
        <source-position filename="../src/gxr-context.h" line="258"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="begin_frame" c:identifier="gxr_context_begin_frame">
        <source-position filename="../src/gxr-context.h" line="252"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="device_is_controller"
              c:identifier="gxr_context_device_is_controller">
        <source-position filename="../src/gxr-context.h" line="264"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="end_frame" c:identifier="gxr_context_end_frame">
        <source-position filename="../src/gxr-context.h" line="255"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_acquired_framebuffer"
              c:identifier="gxr_context_get_acquired_framebuffer"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="314"/>
        <return-value>
          <type c:type="GulkanFrameBuffer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="view" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_api" c:identifier="gxr_context_get_api">
        <source-position filename="../src/gxr-context.h" line="198"/>
        <return-value transfer-ownership="none">
          <type name="Api" c:type="GxrApi"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_extensions"
              c:identifier="gxr_context_get_device_extensions"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="301"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="gc" transfer-ownership="none">
            <type c:type="GulkanClient*"/>
          </parameter>
          <parameter name="out_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_device_manager"
              c:identifier="gxr_context_get_device_manager">
        <source-position filename="../src/gxr-context.h" line="308"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="_GxrDeviceManager*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_device_model_name"
              c:identifier="gxr_context_get_device_model_name">
        <source-position filename="../src/gxr-context.h" line="266"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_frustum_angles"
              c:identifier="gxr_context_get_frustum_angles">
        <source-position filename="../src/gxr-context.h" line="204"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="left" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="right" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="top" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="bottom" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_gulkan"
              c:identifier="gxr_context_get_gulkan"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="295"/>
        <return-value>
          <type c:type="GulkanClient*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_head_pose"
              c:identifier="gxr_context_get_head_pose"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="201"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_instance_extensions"
              c:identifier="gxr_context_get_instance_extensions"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="298"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="out_list" transfer-ownership="none">
            <type name="GLib.SList" c:type="GSList**">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </parameter>
        </parameters>
      </method>
      <method name="get_model_list"
              c:identifier="gxr_context_get_model_list"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="283"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model_normal_offset"
              c:identifier="gxr_context_get_model_normal_offset">
        <source-position filename="../src/gxr-context.h" line="234"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model_uv_offset"
              c:identifier="gxr_context_get_model_uv_offset">
        <source-position filename="../src/gxr-context.h" line="237"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model_vertex_stride"
              c:identifier="gxr_context_get_model_vertex_stride">
        <source-position filename="../src/gxr-context.h" line="231"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_projection"
              c:identifier="gxr_context_get_projection"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="240"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="near" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="far" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_render_dimensions"
              c:identifier="gxr_context_get_render_dimensions"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="212"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="extent" transfer-ownership="none">
            <type c:type="VkExtent2D*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_view"
              c:identifier="gxr_context_get_view"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="247"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="eye" transfer-ownership="none">
            <type name="Eye" c:type="GxrEye"/>
          </parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_view_count" c:identifier="gxr_context_get_view_count">
        <source-position filename="../src/gxr-context.h" line="311"/>
        <return-value transfer-ownership="none">
          <type name="guint32" c:type="uint32_t"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init_framebuffers"
              c:identifier="gxr_context_init_framebuffers"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="216"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="extent" transfer-ownership="none">
            <type c:type="VkExtent2D"/>
          </parameter>
          <parameter name="sample_count" transfer-ownership="none">
            <type c:type="VkSampleCountFlagBits"/>
          </parameter>
          <parameter name="render_pass" transfer-ownership="none">
            <type c:type="GulkanRenderPass**"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_another_scene_running"
              c:identifier="gxr_context_is_another_scene_running">
        <source-position filename="../src/gxr-context.h" line="276"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_input_available"
              c:identifier="gxr_context_is_input_available">
        <source-position filename="../src/gxr-context.h" line="209"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_tracked_device_connected"
              c:identifier="gxr_context_is_tracked_device_connected">
        <source-position filename="../src/gxr-context.h" line="261"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="i" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_action_manifest"
              c:identifier="gxr_context_load_action_manifest">
        <source-position filename="../src/gxr-context.h" line="286"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="cache_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="resource_path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
          <parameter name="manifest_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_model"
              c:identifier="gxr_context_load_model"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="269"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="vbo" transfer-ownership="none">
            <type c:type="GulkanVertexBuffer*"/>
          </parameter>
          <parameter name="texture" transfer-ownership="none">
            <type c:type="GulkanTexture**"/>
          </parameter>
          <parameter name="sampler" transfer-ownership="none">
            <type c:type="VkSampler*"/>
          </parameter>
          <parameter name="model_name" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
      <method name="poll_event" c:identifier="gxr_context_poll_event">
        <source-position filename="../src/gxr-context.h" line="225"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="request_quit" c:identifier="gxr_context_request_quit">
        <source-position filename="../src/gxr-context.h" line="292"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_keyboard_transform"
              c:identifier="gxr_context_set_keyboard_transform"
              introspectable="0">
        <source-position filename="../src/gxr-context.h" line="279"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
          <parameter name="transform" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_keyboard" c:identifier="gxr_context_show_keyboard">
        <source-position filename="../src/gxr-context.h" line="228"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="submit_framebuffers"
              c:identifier="gxr_context_submit_framebuffers">
        <source-position filename="../src/gxr-context.h" line="222"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="action-set-update-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="binding-loaded-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="bindings-update-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="device-update-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="keyboard-close-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="keyboard-press-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="quit-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="ContextClass"
            c:type="GxrContextClass"
            glib:is-gtype-struct-for="Context">
      <source-position filename="../src/gxr-context.h" line="165"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="get_head_pose" introspectable="0">
        <callback name="get_head_pose" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="pose" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_frustum_angles">
        <callback name="get_frustum_angles">
          <source-position filename="../src/gxr-context.h" line="39"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="eye" transfer-ownership="none">
              <type name="Eye" c:type="GxrEye"/>
            </parameter>
            <parameter name="left" transfer-ownership="none">
              <type name="gfloat" c:type="float*"/>
            </parameter>
            <parameter name="right" transfer-ownership="none">
              <type name="gfloat" c:type="float*"/>
            </parameter>
            <parameter name="top" transfer-ownership="none">
              <type name="gfloat" c:type="float*"/>
            </parameter>
            <parameter name="bottom" transfer-ownership="none">
              <type name="gfloat" c:type="float*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_input_available">
        <callback name="is_input_available">
          <source-position filename="../src/gxr-context.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_render_dimensions" introspectable="0">
        <callback name="get_render_dimensions" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="extent" transfer-ownership="none">
              <type c:type="VkExtent2D*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="poll_event">
        <callback name="poll_event">
          <source-position filename="../src/gxr-context.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_keyboard">
        <callback name="show_keyboard">
          <source-position filename="../src/gxr-context.h" line="54"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_runtime">
        <callback name="init_runtime">
          <source-position filename="../src/gxr-context.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="AppType" c:type="GxrAppType"/>
            </parameter>
            <parameter name="app_name" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
            <parameter name="app_version" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_session">
        <callback name="init_session">
          <source-position filename="../src/gxr-context.h" line="63"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="init_framebuffers" introspectable="0">
        <callback name="init_framebuffers" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="66"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="extent" transfer-ownership="none">
              <type c:type="VkExtent2D"/>
            </parameter>
            <parameter name="sample_count" transfer-ownership="none">
              <type c:type="VkSampleCountFlagBits"/>
            </parameter>
            <parameter name="render_pass" transfer-ownership="none">
              <type c:type="GulkanRenderPass**"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="submit_framebuffers">
        <callback name="submit_framebuffers">
          <source-position filename="../src/gxr-context.h" line="72"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_model_vertex_stride">
        <callback name="get_model_vertex_stride">
          <source-position filename="../src/gxr-context.h" line="75"/>
          <return-value transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_model_normal_offset">
        <callback name="get_model_normal_offset">
          <source-position filename="../src/gxr-context.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_model_uv_offset">
        <callback name="get_model_uv_offset">
          <source-position filename="../src/gxr-context.h" line="81"/>
          <return-value transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_projection" introspectable="0">
        <callback name="get_projection" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="eye" transfer-ownership="none">
              <type name="Eye" c:type="GxrEye"/>
            </parameter>
            <parameter name="near" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="far" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="mat" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_view" introspectable="0">
        <callback name="get_view" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="91"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="eye" transfer-ownership="none">
              <type name="Eye" c:type="GxrEye"/>
            </parameter>
            <parameter name="mat" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="begin_frame">
        <callback name="begin_frame">
          <source-position filename="../src/gxr-context.h" line="96"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="poses" transfer-ownership="none">
              <type name="Pose" c:type="GxrPose*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="end_frame">
        <callback name="end_frame">
          <source-position filename="../src/gxr-context.h" line="100"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="acknowledge_quit">
        <callback name="acknowledge_quit">
          <source-position filename="../src/gxr-context.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_tracked_device_connected">
        <callback name="is_tracked_device_connected">
          <source-position filename="../src/gxr-context.h" line="106"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="device_is_controller">
        <callback name="device_is_controller">
          <source-position filename="../src/gxr-context.h" line="109"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_device_model_name">
        <callback name="get_device_model_name">
          <source-position filename="../src/gxr-context.h" line="112"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="i" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load_model" introspectable="0">
        <callback name="load_model" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="115"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="vbo" transfer-ownership="none">
              <type c:type="GulkanVertexBuffer*"/>
            </parameter>
            <parameter name="texture" transfer-ownership="none">
              <type c:type="GulkanTexture**"/>
            </parameter>
            <parameter name="sampler" transfer-ownership="none">
              <type c:type="VkSampler*"/>
            </parameter>
            <parameter name="model_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_another_scene_running">
        <callback name="is_another_scene_running">
          <source-position filename="../src/gxr-context.h" line="122"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_keyboard_transform" introspectable="0">
        <callback name="set_keyboard_transform" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="125"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="transform" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_model_list" introspectable="0">
        <callback name="get_model_list" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="129"/>
          <return-value>
            <type name="GLib.SList" c:type="GSList*">
              <type name="gpointer" c:type="gpointer"/>
            </type>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_action_set_from_url" introspectable="0">
        <callback name="new_action_set_from_url" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="132"/>
          <return-value>
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="load_action_manifest">
        <callback name="load_action_manifest">
          <source-position filename="../src/gxr-context.h" line="135"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="cache_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="resource_path" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
            <parameter name="manifest_name" transfer-ownership="none">
              <type name="utf8" c:type="const char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_action_from_type_url" introspectable="0">
        <callback name="new_action_from_type_url" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="141"/>
          <return-value>
            <type name="Action" c:type="GxrAction*"/>
          </return-value>
          <parameters>
            <parameter name="context" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="action_set" transfer-ownership="none">
              <type name="ActionSet" c:type="GxrActionSet*"/>
            </parameter>
            <parameter name="type" transfer-ownership="none">
              <type name="ActionType" c:type="GxrActionType"/>
            </parameter>
            <parameter name="url" transfer-ownership="none">
              <type name="utf8" c:type="char*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="new_overlay" introspectable="0">
        <callback name="new_overlay" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="147"/>
          <return-value>
            <type name="Overlay" c:type="GxrOverlay*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="key" transfer-ownership="none">
              <type name="utf8" c:type="gchar*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="request_quit">
        <callback name="request_quit">
          <source-position filename="../src/gxr-context.h" line="150"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_instance_extensions" introspectable="0">
        <callback name="get_instance_extensions" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="153"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="out_list" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList**">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_device_extensions" introspectable="0">
        <callback name="get_device_extensions" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="156"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="gc" transfer-ownership="none">
              <type c:type="GulkanClient*"/>
            </parameter>
            <parameter name="out_list" transfer-ownership="none">
              <type name="GLib.SList" c:type="GSList**">
                <type name="gpointer" c:type="gpointer"/>
              </type>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_view_count">
        <callback name="get_view_count">
          <source-position filename="../src/gxr-context.h" line="161"/>
          <return-value transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_acquired_framebuffer" introspectable="0">
        <callback name="get_acquired_framebuffer" introspectable="0">
          <source-position filename="../src/gxr-context.h" line="164"/>
          <return-value>
            <type c:type="GulkanFrameBuffer*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Context" c:type="GxrContext*"/>
            </parameter>
            <parameter name="view" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Controller"
           c:symbol-prefix="controller"
           c:type="GxrController"
           parent="Device"
           glib:type-name="GxrController"
           glib:get-type="gxr_controller_get_type"
           glib:type-struct="ControllerClass">
      <source-position filename="../src/gxr-controller.h" line="22"/>
      <constructor name="new" c:identifier="gxr_controller_new">
        <source-position filename="../src/gxr-controller.h" line="55"/>
        <return-value transfer-ownership="full">
          <type name="Controller" c:type="GxrController*"/>
        </return-value>
        <parameters>
          <parameter name="controller_handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="model_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="drag_start"
              c:identifier="gxr_controller_drag_start"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="125"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="grabbed_object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="object_pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_distance"
              c:identifier="gxr_controller_get_distance"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="110"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="point" transfer-ownership="none">
            <type c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_drag_pose"
              c:identifier="gxr_controller_get_drag_pose"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="130"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="drag_pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_grab_state"
              c:identifier="gxr_controller_get_grab_state"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="75"/>
        <return-value>
          <type name="GrabState" c:type="GxrGrabState*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_hand_grip_pose"
              c:identifier="gxr_controller_get_hand_grip_pose"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_hover_state"
              c:identifier="gxr_controller_get_hover_state"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="72"/>
        <return-value>
          <type name="HoverState" c:type="GxrHoverState*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer"
              c:identifier="gxr_controller_get_pointer"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="60"/>
        <return-value>
          <type name="Pointer" c:type="GxrPointer*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_pointer_pose"
              c:identifier="gxr_controller_get_pointer_pose"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="113"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_pointer_tip"
              c:identifier="gxr_controller_get_pointer_tip"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="63"/>
        <return-value>
          <type name="PointerTip" c:type="GxrPointerTip*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_user_data" c:identifier="gxr_controller_get_user_data">
        <source-position filename="../src/gxr-controller.h" line="137"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="gpointer"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="hide_pointer" c:identifier="gxr_controller_hide_pointer">
        <source-position filename="../src/gxr-controller.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_pointer_pose_valid"
              c:identifier="gxr_controller_is_pointer_pose_valid">
        <source-position filename="../src/gxr-controller.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_pointer_visible"
              c:identifier="gxr_controller_is_pointer_visible">
        <source-position filename="../src/gxr-controller.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_grab_state"
              c:identifier="gxr_controller_reset_grab_state">
        <source-position filename="../src/gxr-controller.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reset_hover_state"
              c:identifier="gxr_controller_reset_hover_state">
        <source-position filename="../src/gxr-controller.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_pointer" c:identifier="gxr_controller_set_pointer">
        <source-position filename="../src/gxr-controller.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pointer" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_pointer_tip"
              c:identifier="gxr_controller_set_pointer_tip">
        <source-position filename="../src/gxr-controller.h" line="69"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="tip" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_user_data" c:identifier="gxr_controller_set_user_data">
        <source-position filename="../src/gxr-controller.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="data"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </method>
      <method name="show_pointer" c:identifier="gxr_controller_show_pointer">
        <source-position filename="../src/gxr-controller.h" line="104"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_hand_grip_pose"
              c:identifier="gxr_controller_update_hand_grip_pose"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
          <parameter name="valid" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_hovered_object"
              c:identifier="gxr_controller_update_hovered_object"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="116"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="last_object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
          <parameter name="object_pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
          <parameter name="intersection_point" transfer-ownership="none">
            <type c:type="graphene_point3d_t*"/>
          </parameter>
          <parameter name="intersection_2d" transfer-ownership="none">
            <type c:type="graphene_point_t*"/>
          </parameter>
          <parameter name="intersection_distance" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_pointer_pose"
              c:identifier="gxr_controller_update_pointer_pose"
              introspectable="0">
        <source-position filename="../src/gxr-controller.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Controller" c:type="GxrController*"/>
          </instance-parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
          <parameter name="valid" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ControllerClass"
            c:type="GxrControllerClass"
            glib:is-gtype-struct-for="Controller">
      <source-position filename="../src/gxr-controller.h" line="22"/>
      <field name="parent_class">
        <type name="DeviceClass" c:type="GxrDeviceClass"/>
      </field>
    </record>
    <constant name="DEVICE_INDEX_HMD" value="0" c:type="GXR_DEVICE_INDEX_HMD">
      <source-position filename="../src/gxr-enums.h" line="16"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <constant name="DEVICE_INDEX_MAX" value="64" c:type="GXR_DEVICE_INDEX_MAX">
      <source-position filename="../src/gxr-enums.h" line="15"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Device"
           c:symbol-prefix="device"
           c:type="GxrDevice"
           parent="GObject.Object"
           glib:type-name="GxrDevice"
           glib:get-type="gxr_device_get_type"
           glib:type-struct="DeviceClass">
      <source-position filename="../src/gxr-device.h" line="34"/>
      <constructor name="new" c:identifier="gxr_device_new">
        <source-position filename="../src/gxr-device.h" line="37"/>
        <return-value transfer-ownership="full">
          <type name="Device" c:type="GxrDevice*"/>
        </return-value>
        <parameters>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="model_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <method name="get_handle" c:identifier="gxr_device_get_handle">
        <source-position filename="../src/gxr-device.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="guint64" c:type="guint64"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model" c:identifier="gxr_device_get_model">
        <source-position filename="../src/gxr-device.h" line="61"/>
        <return-value transfer-ownership="none" nullable="1">
          <type name="gpointer" c:type="_GxrModel*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_model_name" c:identifier="gxr_device_get_model_name">
        <source-position filename="../src/gxr-device.h" line="55"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transformation_direct"
              c:identifier="gxr_device_get_transformation_direct"
              introspectable="0">
        <source-position filename="../src/gxr-device.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="initialize" c:identifier="gxr_device_initialize">
        <source-position filename="../src/gxr-device.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_controller" c:identifier="gxr_device_is_controller">
        <source-position filename="../src/gxr-device.h" line="43"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_pose_valid" c:identifier="gxr_device_is_pose_valid">
        <source-position filename="../src/gxr-device.h" line="49"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_handle" c:identifier="gxr_device_set_handle">
        <source-position filename="../src/gxr-device.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="handle" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_is_pose_valid"
              c:identifier="gxr_device_set_is_pose_valid">
        <source-position filename="../src/gxr-device.h" line="46"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="valid" transfer-ownership="none">
            <type name="gboolean" c:type="_Bool"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model" c:identifier="gxr_device_set_model">
        <source-position filename="../src/gxr-device.h" line="58"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="model"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="_GxrModel*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_model_name" c:identifier="gxr_device_set_model_name">
        <source-position filename="../src/gxr-device.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="model_name" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transformation_direct"
              c:identifier="gxr_device_set_transformation_direct"
              introspectable="0">
        <source-position filename="../src/gxr-device.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Device" c:type="GxrDevice*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
    </class>
    <record name="DeviceClass"
            c:type="GxrDeviceClass"
            glib:is-gtype-struct-for="Device">
      <source-position filename="../src/gxr-device.h" line="34"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <class name="DeviceManager"
           c:symbol-prefix="device_manager"
           c:type="GxrDeviceManager"
           parent="GObject.Object"
           glib:type-name="GxrDeviceManager"
           glib:get-type="gxr_device_manager_get_type"
           glib:type-struct="DeviceManagerClass">
      <source-position filename="../src/gxr-device-manager.h" line="26"/>
      <constructor name="new" c:identifier="gxr_device_manager_new">
        <source-position filename="../src/gxr-device-manager.h" line="29"/>
        <return-value transfer-ownership="full">
          <type name="DeviceManager" c:type="GxrDeviceManager*"/>
        </return-value>
      </constructor>
      <method name="add" c:identifier="gxr_device_manager_add">
        <source-position filename="../src/gxr-device-manager.h" line="32"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="context"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="_GxrContext*"/>
          </parameter>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="is_controller" transfer-ownership="none">
            <type name="gboolean" c:type="_Bool"/>
          </parameter>
        </parameters>
      </method>
      <method name="connect_pose_actions"
              c:identifier="gxr_device_manager_connect_pose_actions">
        <source-position filename="../src/gxr-device-manager.h" line="54"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="context"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="_GxrContext*"/>
          </parameter>
          <parameter name="action_set" transfer-ownership="none">
            <type name="ActionSet" c:type="GxrActionSet*"/>
          </parameter>
          <parameter name="pointer_pose_url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="hand_grip_pose_url" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get"
              c:identifier="gxr_device_manager_get"
              introspectable="0">
        <source-position filename="../src/gxr-device-manager.h" line="48"/>
        <return-value>
          <type name="Device" c:type="GxrDevice*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_controllers"
              c:identifier="gxr_device_manager_get_controllers"
              introspectable="0">
        <source-position filename="../src/gxr-device-manager.h" line="45"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_devices"
              c:identifier="gxr_device_manager_get_devices"
              introspectable="0">
        <source-position filename="../src/gxr-device-manager.h" line="51"/>
        <return-value>
          <type name="GLib.List" c:type="GList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="remove" c:identifier="gxr_device_manager_remove">
        <source-position filename="../src/gxr-device-manager.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="device_id" transfer-ownership="none">
            <type name="guint64" c:type="guint64"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_poses"
              c:identifier="gxr_device_manager_update_poses">
        <source-position filename="../src/gxr-device-manager.h" line="42"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="DeviceManager" c:type="GxrDeviceManager*"/>
          </instance-parameter>
          <parameter name="poses" transfer-ownership="none">
            <type name="Pose" c:type="GxrPose*"/>
          </parameter>
        </parameters>
      </method>
      <glib:signal name="device-activate-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="device-deactivate-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="DeviceManagerClass"
            c:type="GxrDeviceManagerClass"
            glib:is-gtype-struct-for="DeviceManager">
      <source-position filename="../src/gxr-device-manager.h" line="26"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <record name="DigitalEvent" c:type="GxrDigitalEvent">
      <doc xml:space="preserve"
           filename="../src/gxr-types.h"
           line="25">Digital event.</doc>
      <source-position filename="../src/gxr-types.h" line="41"/>
      <field name="active" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="27">Whether or not this action is currently available to be bound in the active action set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="state" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="28">Pressed or released.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="changed" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="29">Whether the state has changed since last event.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="controller" writable="1">
        <type name="Controller" c:type="GxrController*"/>
      </field>
      <field name="time" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="31">The time of the event.</doc>
        <type name="gfloat" c:type="gfloat"/>
      </field>
    </record>
    <enumeration name="Eye" c:type="GxrEye">
      <doc xml:space="preserve"
           filename="../src/gxr-enums.h"
           line="49">Type of Gxr viewport.</doc>
      <source-position filename="../src/gxr-enums.h" line="60"/>
      <member name="left" value="0" c:identifier="GXR_EYE_LEFT">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="51">Left eye.</doc>
      </member>
      <member name="right" value="1" c:identifier="GXR_EYE_RIGHT">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="52">Right eye.</doc>
      </member>
    </enumeration>
    <record name="GrabState" c:type="GxrGrabState">
      <source-position filename="../src/gxr-controller.h" line="53"/>
      <field name="grabbed_object" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="object_rotation" introspectable="0" writable="1">
        <type c:type="graphene_quaternion_t"/>
      </field>
      <field name="inverse_controller_rotation"
             introspectable="0"
             writable="1">
        <type c:type="graphene_quaternion_t"/>
      </field>
      <field name="grab_offset" introspectable="0" writable="1">
        <type c:type="graphene_point_t"/>
      </field>
      <field name="transform_lock" writable="1">
        <type name="TransformLock" c:type="GxrTransformLock"/>
      </field>
    </record>
    <record name="HoverState" c:type="GxrHoverState">
      <source-position filename="../src/gxr-controller.h" line="45"/>
      <field name="hovered_object" writable="1">
        <type name="gpointer" c:type="gpointer"/>
      </field>
      <field name="distance" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="intersection_2d" introspectable="0" writable="1">
        <type c:type="graphene_point_t"/>
      </field>
    </record>
    <constant name="MODEL_NAME_MAX" value="32768" c:type="GXR_MODEL_NAME_MAX">
      <source-position filename="../src/gxr-enums.h" line="17"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <class name="Manifest"
           c:symbol-prefix="manifest"
           c:type="GxrManifest"
           parent="GObject.Object"
           glib:type-name="GxrManifest"
           glib:get-type="gxr_manifest_get_type"
           glib:type-struct="ManifestClass">
      <source-position filename="../src/gxr-manifest.h" line="112"/>
      <constructor name="new" c:identifier="gxr_manifest_new">
        <source-position filename="../src/gxr-manifest.h" line="114"/>
        <return-value transfer-ownership="full">
          <type name="Manifest" c:type="GxrManifest*"/>
        </return-value>
      </constructor>
      <method name="get_binding_filenames"
              c:identifier="gxr_manifest_get_binding_filenames"
              introspectable="0">
        <source-position filename="../src/gxr-manifest.h" line="124"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_binding_manifests"
              c:identifier="gxr_manifest_get_binding_manifests"
              introspectable="0">
        <source-position filename="../src/gxr-manifest.h" line="128"/>
        <return-value>
          <type name="GLib.SList" c:type="GSList*">
            <type name="gpointer" c:type="gpointer"/>
          </type>
        </return-value>
        <parameters>
          <instance-parameter name="manifest" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="load_actions" c:identifier="gxr_manifest_load_actions">
        <source-position filename="../src/gxr-manifest.h" line="117"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
          <parameter name="action_stream" transfer-ownership="none">
            <type name="Gio.InputStream" c:type="GInputStream*"/>
          </parameter>
        </parameters>
      </method>
      <method name="load_bindings" c:identifier="gxr_manifest_load_bindings">
        <source-position filename="../src/gxr-manifest.h" line="121"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Manifest" c:type="GxrManifest*"/>
          </instance-parameter>
          <parameter name="resource_path" transfer-ownership="none">
            <type name="utf8" c:type="const char*"/>
          </parameter>
        </parameters>
      </method>
    </class>
    <record name="ManifestClass"
            c:type="GxrManifestClass"
            glib:is-gtype-struct-for="Manifest">
      <source-position filename="../src/gxr-manifest.h" line="112"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
    </record>
    <interface name="Model"
               c:symbol-prefix="model"
               c:type="GxrModel"
               glib:type-name="GxrModel"
               glib:get-type="gxr_model_get_type"
               glib:type-struct="ModelInterface">
      <source-position filename="../src/gxr-model.h" line="30"/>
      <virtual-method name="get_name" invoker="get_name">
        <source-position filename="../src/gxr-model.h" line="29"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Model" c:type="GxrModel*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_name" c:identifier="gxr_model_get_name">
        <source-position filename="../src/gxr-model.h" line="33"/>
        <return-value transfer-ownership="full">
          <type name="utf8" c:type="gchar*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Model" c:type="GxrModel*"/>
          </instance-parameter>
        </parameters>
      </method>
    </interface>
    <record name="ModelInterface"
            c:type="GxrModelInterface"
            glib:is-gtype-struct-for="Model">
      <source-position filename="../src/gxr-model.h" line="30"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="get_name">
        <callback name="get_name">
          <source-position filename="../src/gxr-model.h" line="29"/>
          <return-value transfer-ownership="full">
            <type name="utf8" c:type="gchar*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Model" c:type="GxrModel*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="Overlay"
           c:symbol-prefix="overlay"
           c:type="GxrOverlay"
           parent="GObject.Object"
           glib:type-name="GxrOverlay"
           glib:get-type="gxr_overlay_get_type"
           glib:type-struct="OverlayClass">
      <source-position filename="../src/gxr-overlay.h" line="113"/>
      <constructor name="new" c:identifier="gxr_overlay_new">
        <source-position filename="../src/gxr-overlay.h" line="116"/>
        <return-value transfer-ownership="full">
          <type name="Overlay" c:type="GxrOverlay*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </constructor>
      <constructor name="new_width" c:identifier="gxr_overlay_new_width">
        <source-position filename="../src/gxr-overlay.h" line="119"/>
        <return-value transfer-ownership="full">
          <type name="Overlay" c:type="GxrOverlay*"/>
        </return-value>
        <parameters>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="key" transfer-ownership="none">
            <type name="utf8" c:type="gchar*"/>
          </parameter>
          <parameter name="meters" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </constructor>
      <virtual-method name="clear_texture" invoker="clear_texture">
        <source-position filename="../src/gxr-overlay.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="enable_mouse_input" invoker="enable_mouse_input">
        <source-position filename="../src/gxr-overlay.h" line="88"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_color" invoker="get_color" introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <type c:type="graphene_vec3_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_size_pixels"
                      invoker="get_size_pixels"
                      introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <type c:type="VkExtent2D*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_transform_absolute"
                      invoker="get_transform_absolute"
                      introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="91"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_width_meters" invoker="get_width_meters">
        <source-position filename="../src/gxr-overlay.h" line="85"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hide" invoker="hide">
        <source-position filename="../src/gxr-overlay.h" line="53"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_visible" invoker="is_visible">
        <source-position filename="../src/gxr-overlay.h" line="44"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="poll_event" invoker="poll_event">
        <source-position filename="../src/gxr-overlay.h" line="38"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="print_info" invoker="print_info">
        <source-position filename="../src/gxr-overlay.h" line="108"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_alpha" invoker="set_alpha">
        <source-position filename="../src/gxr-overlay.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="alpha" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_color" invoker="set_color" introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <type c:type="const graphene_vec3_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_flip_y" invoker="set_flip_y">
        <source-position filename="../src/gxr-overlay.h" line="111"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="flip_y" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_keyboard_position"
                      invoker="set_keyboard_position"
                      introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="top_left" transfer-ownership="none">
            <type c:type="graphene_vec2_t*"/>
          </parameter>
          <parameter name="bottom_right" transfer-ownership="none">
            <type c:type="graphene_vec2_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_mouse_scale" invoker="set_mouse_scale">
        <source-position filename="../src/gxr-overlay.h" line="41"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_raw" invoker="set_raw">
        <source-position filename="../src/gxr-overlay.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="pixels" transfer-ownership="none">
            <type name="guint8" c:type="guchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="depth" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_sort_order" invoker="set_sort_order">
        <source-position filename="../src/gxr-overlay.h" line="56"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="sort_order" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_transform_absolute"
                      invoker="set_transform_absolute"
                      introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_width_meters" invoker="set_width_meters">
        <source-position filename="../src/gxr-overlay.h" line="71"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="meters" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show" invoker="show">
        <source-position filename="../src/gxr-overlay.h" line="50"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show_keyboard" invoker="show_keyboard">
        <source-position filename="../src/gxr-overlay.h" line="95"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="submit_texture" introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="client" transfer-ownership="none">
            <type c:type="GulkanClient*"/>
          </parameter>
          <parameter name="texture" transfer-ownership="none">
            <type c:type="GulkanTexture*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="thumbnail_is_visible"
                      invoker="thumbnail_is_visible">
        <source-position filename="../src/gxr-overlay.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="clear_texture" c:identifier="gxr_overlay_clear_texture">
        <source-position filename="../src/gxr-overlay.h" line="170"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="enable_mouse_input"
              c:identifier="gxr_overlay_enable_mouse_input">
        <source-position filename="../src/gxr-overlay.h" line="199"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_color"
              c:identifier="gxr_overlay_get_color"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="173"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <type c:type="graphene_vec3_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_context"
              c:identifier="gxr_overlay_get_context"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="221"/>
        <return-value>
          <type name="Context" c:type="GxrContext*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_flip_y" c:identifier="gxr_overlay_get_flip_y">
        <source-position filename="../src/gxr-overlay.h" line="141"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_size_meters"
              c:identifier="gxr_overlay_get_size_meters"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="134"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <type c:type="graphene_vec2_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_size_pixels"
              c:identifier="gxr_overlay_get_size_pixels"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="193"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="size" transfer-ownership="none">
            <type c:type="VkExtent2D*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transform_absolute"
              c:identifier="gxr_overlay_get_transform_absolute"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="202"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_width_meters"
              c:identifier="gxr_overlay_get_width_meters">
        <source-position filename="../src/gxr-overlay.h" line="196"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="gxr_overlay_hide">
        <source-position filename="../src/gxr-overlay.h" line="164"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_visible" c:identifier="gxr_overlay_is_visible">
        <source-position filename="../src/gxr-overlay.h" line="155"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="poll_event" c:identifier="gxr_overlay_poll_event">
        <source-position filename="../src/gxr-overlay.h" line="149"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="print_info" c:identifier="gxr_overlay_print_info">
        <source-position filename="../src/gxr-overlay.h" line="218"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_alpha" c:identifier="gxr_overlay_set_alpha">
        <source-position filename="../src/gxr-overlay.h" line="179"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="alpha" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_cairo_surface_raw"
              c:identifier="gxr_overlay_set_cairo_surface_raw">
        <source-position filename="../src/gxr-overlay.h" line="127"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="surface" transfer-ownership="none">
            <type name="cairo.Surface" c:type="cairo_surface_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_color"
              c:identifier="gxr_overlay_set_color"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="176"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="color" transfer-ownership="none">
            <type c:type="const graphene_vec3_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_flip_y" c:identifier="gxr_overlay_set_flip_y">
        <source-position filename="../src/gxr-overlay.h" line="144"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="flip_y" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_gdk_pixbuf_raw"
              c:identifier="gxr_overlay_set_gdk_pixbuf_raw">
        <source-position filename="../src/gxr-overlay.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="pixbuf" transfer-ownership="none">
            <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_keyboard_position"
              c:identifier="gxr_overlay_set_keyboard_position"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="209"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="top_left" transfer-ownership="none">
            <type c:type="graphene_vec2_t*"/>
          </parameter>
          <parameter name="bottom_right" transfer-ownership="none">
            <type c:type="graphene_vec2_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_mouse_scale"
              c:identifier="gxr_overlay_set_mouse_scale">
        <source-position filename="../src/gxr-overlay.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_raw" c:identifier="gxr_overlay_set_raw">
        <source-position filename="../src/gxr-overlay.h" line="189"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="pixels" transfer-ownership="none">
            <type name="guint8" c:type="guchar*"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
          <parameter name="depth" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_sort_order" c:identifier="gxr_overlay_set_sort_order">
        <source-position filename="../src/gxr-overlay.h" line="167"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="sort_order" transfer-ownership="none">
            <type name="guint32" c:type="uint32_t"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transform_absolute"
              c:identifier="gxr_overlay_set_transform_absolute"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="185"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="mat" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_translation"
              c:identifier="gxr_overlay_set_translation"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="137"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="translation" transfer-ownership="none">
            <type c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_visibility" c:identifier="gxr_overlay_set_visibility">
        <source-position filename="../src/gxr-overlay.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="visibility" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width_meters"
              c:identifier="gxr_overlay_set_width_meters">
        <source-position filename="../src/gxr-overlay.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="meters" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="gxr_overlay_show">
        <source-position filename="../src/gxr-overlay.h" line="161"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="show_keyboard" c:identifier="gxr_overlay_show_keyboard">
        <source-position filename="../src/gxr-overlay.h" line="206"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="submit_texture"
              c:identifier="gxr_overlay_submit_texture"
              introspectable="0">
        <source-position filename="../src/gxr-overlay.h" line="214"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
          <parameter name="texture" transfer-ownership="none">
            <type c:type="GulkanTexture*"/>
          </parameter>
        </parameters>
      </method>
      <method name="thumbnail_is_visible"
              c:identifier="gxr_overlay_thumbnail_is_visible">
        <source-position filename="../src/gxr-overlay.h" line="158"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Overlay" c:type="GxrOverlay*"/>
          </instance-parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <glib:signal name="button-press-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="button-release-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="destroy" when="cleanup" no-recurse="1" no-hooks="1">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="hide" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="keyboard-close-event" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="keyboard-press-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="motion-notify-event" when="last">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="object" transfer-ownership="none">
            <type name="Gdk.Event"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="show" when="first">
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="OverlayClass"
            c:type="GxrOverlayClass"
            glib:is-gtype-struct-for="Overlay">
      <source-position filename="../src/gxr-overlay.h" line="113"/>
      <field name="parent">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="poll_event">
        <callback name="poll_event">
          <source-position filename="../src/gxr-overlay.h" line="38"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_mouse_scale">
        <callback name="set_mouse_scale">
          <source-position filename="../src/gxr-overlay.h" line="41"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_visible">
        <callback name="is_visible">
          <source-position filename="../src/gxr-overlay.h" line="44"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="thumbnail_is_visible">
        <callback name="thumbnail_is_visible">
          <source-position filename="../src/gxr-overlay.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show">
        <callback name="show">
          <source-position filename="../src/gxr-overlay.h" line="50"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hide">
        <callback name="hide">
          <source-position filename="../src/gxr-overlay.h" line="53"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_sort_order">
        <callback name="set_sort_order">
          <source-position filename="../src/gxr-overlay.h" line="56"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="sort_order" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="clear_texture">
        <callback name="clear_texture">
          <source-position filename="../src/gxr-overlay.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_color" introspectable="0">
        <callback name="get_color" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="color" transfer-ownership="none">
              <type c:type="graphene_vec3_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_color" introspectable="0">
        <callback name="set_color" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="color" transfer-ownership="none">
              <type c:type="const graphene_vec3_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_alpha">
        <callback name="set_alpha">
          <source-position filename="../src/gxr-overlay.h" line="68"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="alpha" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_width_meters">
        <callback name="set_width_meters">
          <source-position filename="../src/gxr-overlay.h" line="71"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="meters" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_transform_absolute" introspectable="0">
        <callback name="set_transform_absolute" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="74"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="mat" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_raw">
        <callback name="set_raw">
          <source-position filename="../src/gxr-overlay.h" line="78"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="pixels" transfer-ownership="none">
              <type name="guint8" c:type="guchar*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
            <parameter name="height" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
            <parameter name="depth" transfer-ownership="none">
              <type name="guint32" c:type="uint32_t"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_size_pixels" introspectable="0">
        <callback name="get_size_pixels" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="82"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="size" transfer-ownership="none">
              <type c:type="VkExtent2D*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_width_meters">
        <callback name="get_width_meters">
          <source-position filename="../src/gxr-overlay.h" line="85"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="width" transfer-ownership="none">
              <type name="gfloat" c:type="float*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="enable_mouse_input">
        <callback name="enable_mouse_input">
          <source-position filename="../src/gxr-overlay.h" line="88"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_transform_absolute" introspectable="0">
        <callback name="get_transform_absolute" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="91"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="mat" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show_keyboard">
        <callback name="show_keyboard">
          <source-position filename="../src/gxr-overlay.h" line="95"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_keyboard_position" introspectable="0">
        <callback name="set_keyboard_position" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="98"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="top_left" transfer-ownership="none">
              <type c:type="graphene_vec2_t*"/>
            </parameter>
            <parameter name="bottom_right" transfer-ownership="none">
              <type c:type="graphene_vec2_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="submit_texture" introspectable="0">
        <callback name="submit_texture" introspectable="0">
          <source-position filename="../src/gxr-overlay.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="client" transfer-ownership="none">
              <type c:type="GulkanClient*"/>
            </parameter>
            <parameter name="texture" transfer-ownership="none">
              <type c:type="GulkanTexture*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="print_info">
        <callback name="print_info">
          <source-position filename="../src/gxr-overlay.h" line="108"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_flip_y">
        <callback name="set_flip_y">
          <source-position filename="../src/gxr-overlay.h" line="111"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Overlay" c:type="GxrOverlay*"/>
            </parameter>
            <parameter name="flip_y" transfer-ownership="none">
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="Pointer"
               c:symbol-prefix="pointer"
               c:type="GxrPointer"
               glib:type-name="GxrPointer"
               glib:get-type="gxr_pointer_get_type"
               glib:type-struct="PointerInterface">
      <source-position filename="../src/gxr-pointer.h" line="63"/>
      <virtual-method name="get_data" invoker="get_data" introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="44"/>
        <return-value>
          <type name="PointerData" c:type="GxrPointerData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_transformation"
                      invoker="get_transformation"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="51"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hide" invoker="hide">
        <source-position filename="../src/gxr-pointer.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="move" invoker="move" introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="36"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="transform" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_length" invoker="set_length">
        <source-position filename="../src/gxr-pointer.h" line="40"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_selected_object">
        <source-position filename="../src/gxr-pointer.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="pointer" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="object"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <type name="gpointer" c:type="gpointer"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_transformation"
                      invoker="set_transformation"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="47"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show" invoker="show">
        <source-position filename="../src/gxr-pointer.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="get_data"
              c:identifier="gxr_pointer_get_data"
              introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="80"/>
        <return-value>
          <type name="PointerData" c:type="GxrPointerData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_default_length"
              c:identifier="gxr_pointer_get_default_length">
        <source-position filename="../src/gxr-pointer.h" line="74"/>
        <return-value transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_plane_intersection"
              c:identifier="gxr_pointer_get_plane_intersection"
              introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="98"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="plane" transfer-ownership="none">
            <type c:type="graphene_plane_t*"/>
          </parameter>
          <parameter name="plane_transform" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
          <parameter name="plane_aspect" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
          <parameter name="distance" transfer-ownership="none">
            <type name="gfloat" c:type="float*"/>
          </parameter>
          <parameter name="res" transfer-ownership="none">
            <type c:type="graphene_vec3_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_ray"
              c:identifier="gxr_pointer_get_ray"
              introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="94"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="res" transfer-ownership="none">
            <type c:type="graphene_ray_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_transformation"
              c:identifier="gxr_pointer_get_transformation"
              introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="gxr_pointer_hide">
        <source-position filename="../src/gxr-pointer.h" line="109"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init" c:identifier="gxr_pointer_init">
        <source-position filename="../src/gxr-pointer.h" line="83"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="is_visible" c:identifier="gxr_pointer_is_visible">
        <source-position filename="../src/gxr-pointer.h" line="112"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="move" c:identifier="gxr_pointer_move" introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="transform" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="reset_length" c:identifier="gxr_pointer_reset_length">
        <source-position filename="../src/gxr-pointer.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="set_length" c:identifier="gxr_pointer_set_length">
        <source-position filename="../src/gxr-pointer.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="length" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transformation"
              c:identifier="gxr_pointer_set_transformation"
              introspectable="0">
        <source-position filename="../src/gxr-pointer.h" line="86"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="gxr_pointer_show">
        <source-position filename="../src/gxr-pointer.h" line="106"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update_render_ray"
              c:identifier="gxr_pointer_update_render_ray">
        <source-position filename="../src/gxr-pointer.h" line="115"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="Pointer" c:type="GxrPointer*"/>
          </instance-parameter>
          <parameter name="render_ray" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="PointerData" c:type="GxrPointerData">
      <source-position filename="../src/gxr-pointer.h" line="29"/>
      <field name="start_offset" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="length" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="default_length" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="visible" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="render_ray" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <record name="PointerInterface"
            c:type="GxrPointerInterface"
            glib:is-gtype-struct-for="Pointer">
      <source-position filename="../src/gxr-pointer.h" line="63"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="move" introspectable="0">
        <callback name="move" introspectable="0">
          <source-position filename="../src/gxr-pointer.h" line="36"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
            <parameter name="transform" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_length">
        <callback name="set_length">
          <source-position filename="../src/gxr-pointer.h" line="40"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_data" introspectable="0">
        <callback name="get_data" introspectable="0">
          <source-position filename="../src/gxr-pointer.h" line="44"/>
          <return-value>
            <type name="PointerData" c:type="GxrPointerData*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_transformation" introspectable="0">
        <callback name="set_transformation" introspectable="0">
          <source-position filename="../src/gxr-pointer.h" line="47"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_transformation" introspectable="0">
        <callback name="get_transformation" introspectable="0">
          <source-position filename="../src/gxr-pointer.h" line="51"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_selected_object">
        <callback name="set_selected_object">
          <source-position filename="../src/gxr-pointer.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="pointer" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
            <parameter name="object"
                       transfer-ownership="none"
                       nullable="1"
                       allow-none="1">
              <type name="gpointer" c:type="gpointer"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show">
        <callback name="show">
          <source-position filename="../src/gxr-pointer.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hide">
        <callback name="hide">
          <source-position filename="../src/gxr-pointer.h" line="62"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="Pointer" c:type="GxrPointer*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <interface name="PointerTip"
               c:symbol-prefix="pointer_tip"
               c:type="GxrPointerTip"
               glib:type-name="GxrPointerTip"
               glib:get-type="gxr_pointer_tip_get_type"
               glib:type-struct="PointerTipInterface">
      <source-position filename="../src/gxr-pointer-tip.h" line="111"/>
      <virtual-method name="get_data" invoker="get_data" introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="107"/>
        <return-value>
          <type name="PointerTipData" c:type="GxrPointerTipData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_gulkan_client"
                      invoker="get_gulkan_client"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="110"/>
        <return-value>
          <type c:type="GulkanClient*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_texture"
                      invoker="get_texture"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="100"/>
        <return-value>
          <type c:type="GulkanTexture*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="get_transformation"
                      invoker="get_transformation"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="80"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="hide" invoker="hide">
        <source-position filename="../src/gxr-pointer-tip.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="is_visible" invoker="is_visible">
        <source-position filename="../src/gxr-pointer-tip.h" line="90"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_and_submit_texture"
                      invoker="set_and_submit_texture"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="texture" transfer-ownership="none">
            <type c:type="GulkanTexture*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_transformation"
                      invoker="set_transformation"
                      introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="76"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="set_width_meters" invoker="set_width_meters">
        <source-position filename="../src/gxr-pointer-tip.h" line="93"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="meters" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="show" invoker="show">
        <source-position filename="../src/gxr-pointer-tip.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="submit_texture" invoker="submit_texture">
        <source-position filename="../src/gxr-pointer-tip.h" line="97"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="animate_pulse"
              c:identifier="gxr_pointer_tip_animate_pulse">
        <source-position filename="../src/gxr-pointer-tip.h" line="128"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_data"
              c:identifier="gxr_pointer_tip_get_data"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="170"/>
        <return-value>
          <type name="PointerTipData" c:type="GxrPointerTipData*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_gulkan_client"
              c:identifier="gxr_pointer_tip_get_gulkan_client"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="173"/>
        <return-value>
          <type c:type="GulkanClient*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_texture"
              c:identifier="gxr_pointer_tip_get_texture"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="159"/>
        <return-value>
          <type c:type="GulkanTexture*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="get_transformation"
              c:identifier="gxr_pointer_tip_get_transformation"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="135"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="hide" c:identifier="gxr_pointer_tip_hide">
        <source-position filename="../src/gxr-pointer-tip.h" line="142"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="init_settings"
              c:identifier="gxr_pointer_tip_init_settings">
        <source-position filename="../src/gxr-pointer-tip.h" line="162"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="data" transfer-ownership="none">
            <type name="PointerTipData" c:type="GxrPointerTipData*"/>
          </parameter>
        </parameters>
      </method>
      <method name="is_visible" c:identifier="gxr_pointer_tip_is_visible">
        <source-position filename="../src/gxr-pointer-tip.h" line="145"/>
        <return-value transfer-ownership="none">
          <type name="gboolean" c:type="gboolean"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="render"
              c:identifier="gxr_pointer_tip_render"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="166"/>
        <return-value>
          <type name="GdkPixbuf.Pixbuf" c:type="GdkPixbuf*"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="progress" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_active" c:identifier="gxr_pointer_tip_set_active">
        <doc xml:space="preserve"
             filename="../src/gxr-pointer-tip.c"
             line="357">Changes whether the active or inactive style is rendered.
Also cancels animations.</doc>
        <source-position filename="../src/gxr-pointer-tip.h" line="124"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="active" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_and_submit_texture"
              c:identifier="gxr_pointer_tip_set_and_submit_texture"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="155"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="texture" transfer-ownership="none">
            <type c:type="GulkanTexture*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_transformation"
              c:identifier="gxr_pointer_tip_set_transformation"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="131"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="matrix" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_width_meters"
              c:identifier="gxr_pointer_tip_set_width_meters">
        <source-position filename="../src/gxr-pointer-tip.h" line="148"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="meters" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
      <method name="show" c:identifier="gxr_pointer_tip_show">
        <source-position filename="../src/gxr-pointer-tip.h" line="139"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="submit_texture"
              c:identifier="gxr_pointer_tip_submit_texture">
        <source-position filename="../src/gxr-pointer-tip.h" line="152"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="update"
              c:identifier="gxr_pointer_tip_update"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="118"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
          <parameter name="pose" transfer-ownership="none">
            <type c:type="graphene_matrix_t*"/>
          </parameter>
          <parameter name="intersection_point" transfer-ownership="none">
            <type c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_apparent_size"
              c:identifier="gxr_pointer_tip_update_apparent_size">
        <source-position filename="../src/gxr-pointer-tip.h" line="114"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="context" transfer-ownership="none">
            <type name="Context" c:type="GxrContext*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_color"
              c:identifier="gxr_pointer_tip_update_color"
              introspectable="0">
        <source-position filename="../src/gxr-pointer-tip.h" line="182"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="active_color" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
          <parameter name="color" transfer-ownership="none">
            <type c:type="graphene_point3d_t*"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_keep_apparent_size"
              c:identifier="gxr_pointer_tip_update_keep_apparent_size">
        <source-position filename="../src/gxr-pointer-tip.h" line="191"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="keep_apparent_size" transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_pulse_alpha"
              c:identifier="gxr_pointer_tip_update_pulse_alpha">
        <source-position filename="../src/gxr-pointer-tip.h" line="187"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="alpha" transfer-ownership="none">
            <type name="gdouble" c:type="double"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_texture_resolution"
              c:identifier="gxr_pointer_tip_update_texture_resolution">
        <source-position filename="../src/gxr-pointer-tip.h" line="177"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
          <parameter name="height" transfer-ownership="none">
            <type name="gint" c:type="int"/>
          </parameter>
        </parameters>
      </method>
      <method name="update_width_meters"
              c:identifier="gxr_pointer_tip_update_width_meters">
        <source-position filename="../src/gxr-pointer-tip.h" line="194"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <type name="PointerTip" c:type="GxrPointerTip*"/>
          </instance-parameter>
          <parameter name="width" transfer-ownership="none">
            <type name="gfloat" c:type="float"/>
          </parameter>
        </parameters>
      </method>
    </interface>
    <record name="PointerTipAnimation" c:type="GxrPointerTipAnimation">
      <source-position filename="../src/gxr-pointer-tip.h" line="42"/>
      <field name="tip" writable="1">
        <type name="PointerTip" c:type="GxrPointerTip*"/>
      </field>
      <field name="progress" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="callback_id" writable="1">
        <type name="guint" c:type="guint"/>
      </field>
    </record>
    <record name="PointerTipData" c:type="GxrPointerTipData">
      <source-position filename="../src/gxr-pointer-tip.h" line="69"/>
      <field name="tip" writable="1">
        <type name="PointerTip" c:type="GxrPointerTip*"/>
      </field>
      <field name="active" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="upload_layout" introspectable="0" writable="1">
        <type c:type="VkImageLayout"/>
      </field>
      <field name="settings" writable="1">
        <type name="PointerTipSettings" c:type="GxrPointerTipSettings"/>
      </field>
      <field name="animation" writable="1">
        <type name="PointerTipAnimation" c:type="GxrPointerTipAnimation*"/>
      </field>
    </record>
    <record name="PointerTipInterface"
            c:type="GxrPointerTipInterface"
            glib:is-gtype-struct-for="PointerTip">
      <source-position filename="../src/gxr-pointer-tip.h" line="111"/>
      <field name="parent">
        <type name="GObject.TypeInterface" c:type="GTypeInterface"/>
      </field>
      <field name="set_transformation" introspectable="0">
        <callback name="set_transformation" introspectable="0">
          <source-position filename="../src/gxr-pointer-tip.h" line="76"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_transformation" introspectable="0">
        <callback name="get_transformation" introspectable="0">
          <source-position filename="../src/gxr-pointer-tip.h" line="80"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
            <parameter name="matrix" transfer-ownership="none">
              <type c:type="graphene_matrix_t*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="show">
        <callback name="show">
          <source-position filename="../src/gxr-pointer-tip.h" line="84"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="hide">
        <callback name="hide">
          <source-position filename="../src/gxr-pointer-tip.h" line="87"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="is_visible">
        <callback name="is_visible">
          <source-position filename="../src/gxr-pointer-tip.h" line="90"/>
          <return-value transfer-ownership="none">
            <type name="gboolean" c:type="gboolean"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_width_meters">
        <callback name="set_width_meters">
          <source-position filename="../src/gxr-pointer-tip.h" line="93"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
            <parameter name="meters" transfer-ownership="none">
              <type name="gfloat" c:type="float"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="submit_texture">
        <callback name="submit_texture">
          <source-position filename="../src/gxr-pointer-tip.h" line="97"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_texture" introspectable="0">
        <callback name="get_texture" introspectable="0">
          <source-position filename="../src/gxr-pointer-tip.h" line="100"/>
          <return-value>
            <type c:type="GulkanTexture*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="set_and_submit_texture" introspectable="0">
        <callback name="set_and_submit_texture" introspectable="0">
          <source-position filename="../src/gxr-pointer-tip.h" line="103"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
            <parameter name="texture" transfer-ownership="none">
              <type c:type="GulkanTexture*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_data" introspectable="0">
        <callback name="get_data" introspectable="0">
          <source-position filename="../src/gxr-pointer-tip.h" line="107"/>
          <return-value>
            <type name="PointerTipData" c:type="GxrPointerTipData*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="get_gulkan_client" introspectable="0">
        <callback name="get_gulkan_client" introspectable="0">
          <source-position filename="../src/gxr-pointer-tip.h" line="110"/>
          <return-value>
            <type c:type="GulkanClient*"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <type name="PointerTip" c:type="GxrPointerTip*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="PointerTipSettings" c:type="GxrPointerTipSettings">
      <source-position filename="../src/gxr-pointer-tip.h" line="55"/>
      <field name="keep_apparent_size" writable="1">
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="width_meters" writable="1">
        <type name="gfloat" c:type="float"/>
      </field>
      <field name="active_color" introspectable="0" writable="1">
        <type c:type="graphene_point3d_t"/>
      </field>
      <field name="passive_color" introspectable="0" writable="1">
        <type c:type="graphene_point3d_t"/>
      </field>
      <field name="pulse_alpha" writable="1">
        <type name="gdouble" c:type="double"/>
      </field>
      <field name="texture_width" writable="1">
        <type name="gint" c:type="int"/>
      </field>
      <field name="texture_height" writable="1">
        <type name="gint" c:type="int"/>
      </field>
    </record>
    <record name="Pose" c:type="GxrPose">
      <doc xml:space="preserve"
           filename="../src/gxr-types.h"
           line="93">A 4x4 matrix pose.</doc>
      <source-position filename="../src/gxr-types.h" line="103"/>
      <field name="transformation" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="95">The #graphene_matrix_t.</doc>
        <type c:type="graphene_matrix_t"/>
      </field>
      <field name="is_valid" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="96">Validity of the pose.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
    </record>
    <record name="PoseEvent" c:type="GxrPoseEvent">
      <doc xml:space="preserve"
           filename="../src/gxr-types.h"
           line="61">Pose event.</doc>
      <source-position filename="../src/gxr-types.h" line="81"/>
      <field name="active" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="63">Whether or not this action is currently available to be bound in the active action set.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="pose" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="64">The #graphene_matrix_t pose.</doc>
        <type c:type="graphene_matrix_t"/>
      </field>
      <field name="velocity" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="65">Velocity</doc>
        <type c:type="graphene_vec3_t"/>
      </field>
      <field name="angular_velocity" introspectable="0" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="66">Angular velocity.</doc>
        <type c:type="graphene_vec3_t"/>
      </field>
      <field name="valid" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="67">Whether the pose is valid.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="device_connected" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="68">Whether the device is currently connected.</doc>
        <type name="gboolean" c:type="gboolean"/>
      </field>
      <field name="controller" writable="1">
        <type name="Controller" c:type="GxrController*"/>
      </field>
    </record>
    <record name="QuitEvent" c:type="GxrQuitEvent">
      <doc xml:space="preserve"
           filename="../src/gxr-types.h"
           line="83">Event that is emitted when the application needs to quit.</doc>
      <source-position filename="../src/gxr-types.h" line="91"/>
      <field name="reason" writable="1">
        <doc xml:space="preserve"
             filename="../src/gxr-types.h"
             line="85">The #GxrQuitReason.</doc>
        <type name="QuitReason" c:type="GxrQuitReason"/>
      </field>
    </record>
    <enumeration name="QuitReason" c:type="GxrQuitReason">
      <doc xml:space="preserve"
           filename="../src/gxr-enums.h"
           line="34">Reason why an quit signal was received</doc>
      <source-position filename="../src/gxr-enums.h" line="47"/>
      <member name="shutdown" value="0" c:identifier="GXR_QUIT_SHUTDOWN">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="36">Runtime is shutting down.</doc>
      </member>
      <member name="application_transition"
              value="1"
              c:identifier="GXR_QUIT_APPLICATION_TRANSITION">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="37">A new scene application wants the focus.</doc>
      </member>
      <member name="process_quit"
              value="2"
              c:identifier="GXR_QUIT_PROCESS_QUIT">
        <doc xml:space="preserve"
             filename="../src/gxr-enums.h"
             line="38">A running scene application releases the focus.</doc>
      </member>
    </enumeration>
    <constant name="TIP_APPARENT_SIZE_DISTANCE"
              value="3.000000"
              c:type="GXR_TIP_APPARENT_SIZE_DISTANCE">
      <source-position filename="../src/gxr-pointer-tip.h" line="36"/>
      <type name="gdouble" c:type="gdouble"/>
    </constant>
    <constant name="TIP_VIEWPORT_SCALE"
              value="3"
              c:type="GXR_TIP_VIEWPORT_SCALE">
      <source-position filename="../src/gxr-pointer-tip.h" line="31"/>
      <type name="gint" c:type="gint"/>
    </constant>
    <enumeration name="TransformLock" c:type="GxrTransformLock">
      <doc xml:space="preserve"
           filename="../src/gxr-controller.h"
           line="24">The type of transformation the grab action is currently locked to.
This will be detected at the begginging of a grab transformation
and reset after the transformation is done.</doc>
      <source-position filename="../src/gxr-controller.h" line="39"/>
      <member name="none" value="0" c:identifier="GXR_TRANSFORM_LOCK_NONE">
        <doc xml:space="preserve"
             filename="../src/gxr-controller.h"
             line="26">The grab action does not currently have a transformation it is locked to.</doc>
      </member>
      <member name="push_pull"
              value="1"
              c:identifier="GXR_TRANSFORM_LOCK_PUSH_PULL">
        <doc xml:space="preserve"
             filename="../src/gxr-controller.h"
             line="27">Only push pull transformation can be performed.</doc>
      </member>
      <member name="scale" value="2" c:identifier="GXR_TRANSFORM_LOCK_SCALE">
        <doc xml:space="preserve"
             filename="../src/gxr-controller.h"
             line="28">Only a scale transformation can be performed.</doc>
      </member>
    </enumeration>
    <function name="io_create_directory_if_needed"
              c:identifier="gxr_io_create_directory_if_needed">
      <source-position filename="../src/gxr-io.h" line="18"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="path" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_get_cache_path" c:identifier="gxr_io_get_cache_path">
      <source-position filename="../src/gxr-io.h" line="27"/>
      <return-value transfer-ownership="full">
        <type name="GLib.String" c:type="GString*"/>
      </return-value>
      <parameters>
        <parameter name="dir_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
      </parameters>
    </function>
    <function name="io_write_resource_to_file"
              c:identifier="gxr_io_write_resource_to_file">
      <source-position filename="../src/gxr-io.h" line="21"/>
      <return-value transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </return-value>
      <parameters>
        <parameter name="res_base_path" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="cache_path" transfer-ownership="none">
          <type name="utf8" c:type="gchar*"/>
        </parameter>
        <parameter name="file_name" transfer-ownership="none">
          <type name="utf8" c:type="const gchar*"/>
        </parameter>
        <parameter name="file_path" transfer-ownership="none">
          <type name="GLib.String" c:type="GString*"/>
        </parameter>
      </parameters>
    </function>
    <function name="time_age_secs_to_monotonic_msecs"
              c:identifier="gxr_time_age_secs_to_monotonic_msecs">
      <source-position filename="../src/gxr-time.h" line="24"/>
      <return-value transfer-ownership="none">
        <type name="guint32" c:type="guint32"/>
      </return-value>
      <parameters>
        <parameter name="age" transfer-ownership="none">
          <type name="gfloat" c:type="float"/>
        </parameter>
      </parameters>
    </function>
  </namespace>
</repository>
